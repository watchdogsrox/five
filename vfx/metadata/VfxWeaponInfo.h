///////////////////////////////////////////////////////////////////////////////
//  
//	FILE: 	VfxWeaponInfo.h
//	BY	: 	Mark Nicholson
//	FOR	:	Rockstar North
//	ON	:	14 February 2011
//	WHAT:	
//
///////////////////////////////////////////////////////////////////////////////

#ifndef VFX_WEAPONINFO_H
#define	VFX_WEAPONINFO_H


///////////////////////////////////////////////////////////////////////////////
//  INCLUDES
///////////////////////////////////////////////////////////////////////////////													

// rage
#include "atl/array.h"
#include "atl/binmap.h"
#include "atl/hashstring.h"
#include "parser/macros.h"
#include "vector/color32.h"


///////////////////////////////////////////////////////////////////////////////
//  FORWARD DECLARATIONS
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//  ENUMS
///////////////////////////////////////////////////////////////////////////////	


///////////////////////////////////////////////////////////////////////////////
//  STRUCTURES
///////////////////////////////////////////////////////////////////////////////

struct VfxWeaponSpecialMtlPtFxInfo
{
	atHashWithStringNotFinal m_shotPtFxTagName;
	float m_probability;
	float m_scale;
	Color32 m_colTint;

	PAR_SIMPLE_PARSABLE;
};

struct VfxWeaponSpecialMtlExpInfo
{
	atHashWithStringNotFinal m_shotPtExpTagName;
	float m_probability;
	float m_historyCheckDist;
	float m_historyCheckTime;

	PAR_SIMPLE_PARSABLE;
};


///////////////////////////////////////////////////////////////////////////////
//  CLASSES
///////////////////////////////////////////////////////////////////////////////

class CVfxWeaponInfoMgr
{	
	///////////////////////////////////
	// FUNCTIONS 
	///////////////////////////////////

	public: ///////////////////////////

		void LoadData();

		// foot infos
		VfxWeaponSpecialMtlPtFxInfo* GetWeaponSpecialMtlPtFxInfo(u32 hashName);
		VfxWeaponSpecialMtlExpInfo* GetWeaponSpecialMtlExpInfo(u32 hashName);

	

	private: //////////////////////////


		// parser
		PAR_SIMPLE_PARSABLE;


	///////////////////////////////////
	// VARIABLES
	///////////////////////////////////

	private: //////////////////////////

		atBinaryMap<VfxWeaponSpecialMtlPtFxInfo*, atHashWithStringNotFinal> m_vfxWeaponSpecialMtlPtFxInfos;
		atBinaryMap<VfxWeaponSpecialMtlExpInfo*, atHashWithStringNotFinal> m_vfxWeaponSpecialMtlExpInfos;

};


///////////////////////////////////////////////////////////////////////////////
//  EXTERNS
///////////////////////////////////////////////////////////////////////////////

extern	CVfxWeaponInfoMgr g_vfxWeaponInfoMgr;


#endif // VFX_WEAPONINFO_H



