///////////////////////////////////////////////////////////////////////////////
//  
//	FILE: 	VfxLens.h
//	BY	: 	Mark Nicholson
//	FOR	:	Rockstar North
//	ON	:	16 June 2008
//	WHAT:	
//
///////////////////////////////////////////////////////////////////////////////

#ifndef VFX_LENS_H
#define	VFX_LENS_H


///////////////////////////////////////////////////////////////////////////////
//  INCLUDES
///////////////////////////////////////////////////////////////////////////////													

// rage
#include "atl/hashstring.h"

// game


///////////////////////////////////////////////////////////////////////////////
//  FORWARD DECLARATIONS
///////////////////////////////////////////////////////////////////////////////	


///////////////////////////////////////////////////////////////////////////////
//  DEFINES
///////////////////////////////////////////////////////////////////////////////													

enum VfxLensType
{
	VFXLENSTYPE_RAIN			= 0,
	VFXLENSTYPE_SNOW,
//	VFXLENSTYPE_UNDERWATER,
	VFXLENSTYPE_WATER,
//	VFXLENSTYPE_SAND,
//	VFXLENSTYPE_MUD,
//	VFXLENSTYPE_BLOOD,
//	VFXLENSTYPE_DUST,
//	VFXLENSTYPE_SMOKE,
	VFXLENSTYPE_BLAZE,
	VFXLENSTYPE_RUNNING_WATER,
	VFXLENSTYPE_BIKE_DIRT,
	VFXLENSTYPE_NOIR,
	VFXLENSTYPE_NUM
};


///////////////////////////////////////////////////////////////////////////////
//  STRUCTURES
///////////////////////////////////////////////////////////////////////////////	

struct VfxLensInfo
{
	atHashWithStringNotFinal	m_ptFxHashName;
	float						m_distSqrToCamOverride;
	float						m_levelEvo;
	float						m_angleEvo;
	float						m_camSpeedEvo;
	float						m_alphaTint;
	bool						m_registeredThisFrame;
#if __BANK
	bool						m_disableType;
	const char*					m_disableTypeWidgetName;
	bool						m_debugType;
	const char*					m_debugTypeWidgetName;
#endif
};


///////////////////////////////////////////////////////////////////////////////
//  CLASSES
///////////////////////////////////////////////////////////////////////////////

class CVfxLens
{	
	///////////////////////////////////
	// FUNCTIONS 
	///////////////////////////////////

	public: ///////////////////////////

		// main interface
		void				Init					(unsigned initMode);
		void		 		Shutdown    			(unsigned shutdownMode);
		void				Update					();

		void				Register				(VfxLensType type, float levelEvo, float angleEvo, float camSpeedEvo, float alphaTint);

		// debug functions
#if __BANK
		void				InitWidgets				();
#endif

	private: //////////////////////////

		// particle systems
		void				UpdatePtFx				(VfxLensInfo& info, int typeIdx, bool cameraSwitched);

		bool				IsValidCamera			(VfxLensType type);
		bool				IsValidCameraActive		(VfxLensType type);
		

	///////////////////////////////////
	// VARIABLES
	///////////////////////////////////

	private: //////////////////////////

		// type infos
		VfxLensInfo			m_infos[VFXLENSTYPE_NUM];

#if __BANK
		bool				m_disableFirstPersonLensPtFx;
#endif


}; // CVfxLens



///////////////////////////////////////////////////////////////////////////////
//  EXTERNS
///////////////////////////////////////////////////////////////////////////////

extern	CVfxLens			g_vfxLens;


#endif // VFX_LENS_H

