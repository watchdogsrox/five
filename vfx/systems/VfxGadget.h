///////////////////////////////////////////////////////////////////////////////
//  
//	FILE: 	VfxGadget.h
//	BY	: 	Mark Nicholson
//	FOR	:	Rockstar North
//	ON	:	12 Nov 2009
//	WHAT:	
//
///////////////////////////////////////////////////////////////////////////////

#ifndef VFX_GADGET_H
#define	VFX_GADGET_H


///////////////////////////////////////////////////////////////////////////////
//  INCLUDES
///////////////////////////////////////////////////////////////////////////////													

// rage
#include "vectormath/classes.h"

// game


///////////////////////////////////////////////////////////////////////////////
//  FORWARD DECLARATIONS
///////////////////////////////////////////////////////////////////////////////	

class CEntity;
class CObject;
class CPed;
struct VfxPedPtFxInfo_s;


///////////////////////////////////////////////////////////////////////////////
//  DEFINES
///////////////////////////////////////////////////////////////////////////////													


///////////////////////////////////////////////////////////////////////////////
//  ENUMS
///////////////////////////////////////////////////////////////////////////////	

//#define	VFXRANGE_PED_SKI					(30.0f)
//#define	VFXRANGE_PED_SKI_SQR				(VFXRANGE_PED_SKI*VFXRANGE_PED_SKI)


///////////////////////////////////////////////////////////////////////////////
//  STRUCTURES
///////////////////////////////////////////////////////////////////////////////	


///////////////////////////////////////////////////////////////////////////////
//  CLASSES
///////////////////////////////////////////////////////////////////////////////

class CVfxGadget
{	
	///////////////////////////////////
	// FUNCTIONS 
	///////////////////////////////////

	public: ///////////////////////////

		void				Init							(unsigned initMode);
		void				Shutdown						(unsigned shutdownMode);

		// processing
		//void				ProcessVfxSkiing				(CPed* pPed, CEntity* pSkiProp, Vec3V_In vFootVel, bool isRightSki);

		// marks (projected textures)
		//void				UpdateSkiMarks					(CPed* pPed, CEntity* pSkiProp, float skiAngle, bool isRightSki);

		// particle systems
		void				UpdatePtFxJetPackNozzle			(CPed* pPed, CObject* pJetPackObject, s32 nozzleBoneIndex, float thrustUp, float thrustDown, s32 nozzleId);

		// debug functions
#if __BANK
		void				InitWidgets				();
#endif

	private: //////////////////////////
		
		// particle systems
		//void				UpdatePtFxSkiSpray				(CPed* pPed, CEntity* pSkiProp, Mat34V_ConstRef skiMat, VfxPedPtFxInfo_s* pVfxPedPtFxInfo, float footSpeed, float skiAngle, bool isRightSki);
		//void				UpdatePtFxSkiTrail				(CPed* pPed, CEntity* pSkiProp, VfxPedPtFxInfo_s* pVfxPedPtFxInfo, float footSpeed, float skiAngle, bool isRightSki);



	///////////////////////////////////
	// VARIABLES
	///////////////////////////////////

	private: //////////////////////////

		// debug variables
#if __BANK
		// ski spray
		//bool				m_skiSprayDisableLeft;
		//bool				m_skiSprayDisableRight;
		//bool				m_skiSprayDebugRender;
		//float 				m_skiSprayDebugRenderZOffset;
		//float 				m_skiSprayDebugRenderScale;
		//float				m_skiSprayDebugOverride;

		// ski trail
		//bool				m_skiTrailDisableLeft;
		//bool				m_skiTrailDisableRight;

		// ski marks
		//bool				m_skiMarkDisableLeft;
		//bool				m_skiMarkDisableRight;
		//bool				m_skiMarkUseStaticWidth;
		//bool				m_skiMarkForceSnowMtl;
#endif

}; // CVfxGadget



///////////////////////////////////////////////////////////////////////////////
//  EXTERNS
///////////////////////////////////////////////////////////////////////////////

extern	CVfxGadget			g_vfxGadget;


#endif // VFX_GADGET_H



