#ifndef PRESENCEUTIL_H
#define PRESENCEUTIL_H

//DO NOT MODIFY THIS FILE!
//It was automatically generated by xlast2c v2.0


#include <string.h>



namespace player_schema
{

enum PresenceIds
{
    PRESENCE_PRES_0 = 0,
    PRESENCE_PRES_1 = 1,
    PRESENCE_PRES_2 = 2,
    PRESENCE_PRES_3 = 3,
    PRESENCE_PRES_4 = 4,
    PRESENCE_PRES_5 = 5,
    PRESENCE_PRES_6 = 6,
    PRESENCE_PRES_7 = 7,
    PRESENCE_PRES_8 = 8,
    PRESENCE_PRES_9 = 9,
    PRESENCE_PRES_10 = 10,
    PRESENCE_COUNT = 11,
};
 
class PresenceUtil
{
public:
    PresenceUtil() {}
    
    static bool GetIsValid(int presenceid) 
    {
        bool ret = false;
        switch(presenceid)
        {
            case PRESENCE_PRES_0:
                ret = true;
            case PRESENCE_PRES_1:
                ret = true;
            case PRESENCE_PRES_2:
                ret = true;
            case PRESENCE_PRES_3:
                ret = true;
            case PRESENCE_PRES_4:
                ret = true;
            case PRESENCE_PRES_5:
                ret = true;
            case PRESENCE_PRES_6:
                ret = true;
            case PRESENCE_PRES_7:
                ret = true;
            case PRESENCE_PRES_8:
                ret = true;
            case PRESENCE_PRES_9:
                ret = true;
            case PRESENCE_PRES_10:
                ret = true;
        }
        return ret;
    }
    
    static const char* GetLabel(int presenceid) 
    {
        const char* ret = "UNKNOWN_LABEL";
        switch(presenceid)
        {
            case PRESENCE_PRES_0: ret = "PRESENCE_PRES_0"; break;
            case PRESENCE_PRES_1: ret = "PRESENCE_PRES_1"; break;
            case PRESENCE_PRES_2: ret = "PRESENCE_PRES_2"; break;
            case PRESENCE_PRES_3: ret = "PRESENCE_PRES_3"; break;
            case PRESENCE_PRES_4: ret = "PRESENCE_PRES_4"; break;
            case PRESENCE_PRES_5: ret = "PRESENCE_PRES_5"; break;
            case PRESENCE_PRES_6: ret = "PRESENCE_PRES_6"; break;
            case PRESENCE_PRES_7: ret = "PRESENCE_PRES_7"; break;
            case PRESENCE_PRES_8: ret = "PRESENCE_PRES_8"; break;
            case PRESENCE_PRES_9: ret = "PRESENCE_PRES_9"; break;
            case PRESENCE_PRES_10: ret = "PRESENCE_PRES_10"; break;
        }
        return ret;
    }
    
    static int GetId(int presenceid) 
    {
        int ret = 0;
        switch(presenceid)
        {
            case PRESENCE_PRES_0: ret = 0; break;
            case PRESENCE_PRES_1: ret = 1; break;
            case PRESENCE_PRES_2: ret = 2; break;
            case PRESENCE_PRES_3: ret = 3; break;
            case PRESENCE_PRES_4: ret = 4; break;
            case PRESENCE_PRES_5: ret = 5; break;
            case PRESENCE_PRES_6: ret = 6; break;
            case PRESENCE_PRES_7: ret = 7; break;
            case PRESENCE_PRES_8: ret = 8; break;
            case PRESENCE_PRES_9: ret = 9; break;
            case PRESENCE_PRES_10: ret = 10; break;
        }
        return ret;
    }
    
    static int GetCountOfFields(int presenceid) 
    {
        int ret = 0;
        switch(presenceid)
        {
            case PRESENCE_PRES_0: ret = 0; break;
            case PRESENCE_PRES_1: ret = 1; break;
            case PRESENCE_PRES_2: ret = 1; break;
            case PRESENCE_PRES_3: ret = 1; break;
            case PRESENCE_PRES_4: ret = 1; break;
            case PRESENCE_PRES_5: ret = 1; break;
            case PRESENCE_PRES_6: ret = 1; break;
            case PRESENCE_PRES_7: ret = 1; break;
            case PRESENCE_PRES_8: ret = 1; break;
            case PRESENCE_PRES_9: ret = 1; break;
            case PRESENCE_PRES_10: ret = 0; break;
        }
        return ret;
    }
    
    static int GetFieldIdFromFieldIndex(int presenceid, int fieldIndex) 
    {
        int fieldId = -1;
        switch(presenceid)
        {
            case PRESENCE_PRES_0:
            {
            }
            break;
            case PRESENCE_PRES_1:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 3; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_2:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 8; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_3:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 9; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_4:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 6; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_5:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 4; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_6:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 10; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_7:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 5; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_8:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 14; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_9:
            {
                switch(fieldIndex)
                {
                  case 0: fieldId = 15; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_10:
            {
            }
            break;
        }
        return fieldId;
    }
	static const char * GetFieldStrFromFieldId(int fieldId, int fieldIndex)
	{
		switch(fieldId)
		{
			case 3: // CT_SP_MISSIONS
			{
				switch(fieldIndex)
				{
					case 2: // SPM_2
					{
						return "SPM_2";
					}
					case 56: // SPM_56
					{
						return "SPM_56";
					}
					case 102: // SPM_102
					{
						return "SPM_102";
					}
					case 51: // SPM_51
					{
						return "SPM_51";
					}
					case 41: // SPM_41
					{
						return "SPM_41";
					}
					case 9: // SPM_9
					{
						return "SPM_9";
					}
					case 42: // SPM_42
					{
						return "SPM_42";
					}
					case 11: // SPM_11
					{
						return "SPM_11";
					}
					case 47: // SPM_47
					{
						return "SPM_47";
					}
					case 31: // SPM_31
					{
						return "SPM_31";
					}
					case 21: // SPM_21
					{
						return "SPM_21";
					}
					case 17: // SPM_17
					{
						return "SPM_17";
					}
					case 22: // SPM_22
					{
						return "SPM_22";
					}
					case 18: // SPM_18
					{
						return "SPM_18";
					}
					case 48: // SPM_48
					{
						return "SPM_48";
					}
					case 38: // SPM_38
					{
						return "SPM_38";
					}
					case 28: // SPM_28
					{
						return "SPM_28";
					}
					case 92: // SPM_92
					{
						return "SPM_92";
					}
					case 82: // SPM_82
					{
						return "SPM_82";
					}
					case 97: // SPM_97
					{
						return "SPM_97";
					}
					case 87: // SPM_87
					{
						return "SPM_87";
					}
					case 98: // SPM_98
					{
						return "SPM_98";
					}
					case 68: // SPM_68
					{
						return "SPM_68";
					}
					case 125: // SPM_125
					{
						return "SPM_125";
					}
					case 107: // SPM_107
					{
						return "SPM_107";
					}
					case 70: // SPM_70
					{
						return "SPM_70";
					}
					case 104: // SPM_104
					{
						return "SPM_104";
					}
					case 61: // SPM_61
					{
						return "SPM_61";
					}
					case 116: // SPM_116
					{
						return "SPM_116";
					}
					case 73: // SPM_73
					{
						return "SPM_73";
					}
					case 128: // SPM_128
					{
						return "SPM_128";
					}
					case 57: // SPM_57
					{
						return "SPM_57";
					}
					case 112: // SPM_112
					{
						return "SPM_112";
					}
					case 65: // SPM_65
					{
						return "SPM_65";
					}
					case 118: // SPM_118
					{
						return "SPM_118";
					}
					case 33: // SPM_33
					{
						return "SPM_33";
					}
					case 77: // SPM_77
					{
						return "SPM_77";
					}
					case 114: // SPM_114
					{
						return "SPM_114";
					}
					case 95: // SPM_95
					{
						return "SPM_95";
					}
					case 124: // SPM_124
					{
						return "SPM_124";
					}
					case 88: // SPM_88
					{
						return "SPM_88";
					}
					case 120: // SPM_120
					{
						return "SPM_120";
					}
					case 69: // SPM_69
					{
						return "SPM_69";
					}
					case 76: // SPM_76
					{
						return "SPM_76";
					}
					case 53: // SPM_53
					{
						return "SPM_53";
					}
					case 43: // SPM_43
					{
						return "SPM_43";
					}
					case 54: // SPM_54
					{
						return "SPM_54";
					}
					case 63: // SPM_63
					{
						return "SPM_63";
					}
					case 13: // SPM_13
					{
						return "SPM_13";
					}
					case 49: // SPM_49
					{
						return "SPM_49";
					}
					case 14: // SPM_14
					{
						return "SPM_14";
					}
					case 23: // SPM_23
					{
						return "SPM_23";
					}
					case 19: // SPM_19
					{
						return "SPM_19";
					}
					case 24: // SPM_24
					{
						return "SPM_24";
					}
					case 39: // SPM_39
					{
						return "SPM_39";
					}
					case 29: // SPM_29
					{
						return "SPM_29";
					}
					case 93: // SPM_93
					{
						return "SPM_93";
					}
					case 83: // SPM_83
					{
						return "SPM_83";
					}
					case 94: // SPM_94
					{
						return "SPM_94";
					}
					case 84: // SPM_84
					{
						return "SPM_84";
					}
					case 99: // SPM_99
					{
						return "SPM_99";
					}
					case 89: // SPM_89
					{
						return "SPM_89";
					}
					case 117: // SPM_117
					{
						return "SPM_117";
					}
					case 123: // SPM_123
					{
						return "SPM_123";
					}
					case 109: // SPM_109
					{
						return "SPM_109";
					}
					case 62: // SPM_62
					{
						return "SPM_62";
					}
					case 113: // SPM_113
					{
						return "SPM_113";
					}
					case 30: // SPM_30
					{
						return "SPM_30";
					}
					case 121: // SPM_121
					{
						return "SPM_121";
					}
					case 74: // SPM_74
					{
						return "SPM_74";
					}
					case 101: // SPM_101
					{
						return "SPM_101";
					}
					case 58: // SPM_58
					{
						return "SPM_58";
					}
					case 122: // SPM_122
					{
						return "SPM_122";
					}
					case 66: // SPM_66
					{
						return "SPM_66";
					}
					case 6: // SPM_6
					{
						return "SPM_6";
					}
					case 34: // SPM_34
					{
						return "SPM_34";
					}
					case 78: // SPM_78
					{
						return "SPM_78";
					}
					case 105: // SPM_105
					{
						return "SPM_105";
					}
					case 72: // SPM_72
					{
						return "SPM_72";
					}
					case 127: // SPM_127
					{
						return "SPM_127";
					}
					case 71: // SPM_71
					{
						return "SPM_71";
					}
					case 37: // SPM_37
					{
						return "SPM_37";
					}
					case 81: // SPM_81
					{
						return "SPM_81";
					}
					case 64: // SPM_64
					{
						return "SPM_64";
					}
					case 129: // SPM_129
					{
						return "SPM_129";
					}
					case 126: // SPM_126
					{
						return "SPM_126";
					}
					case 50: // SPM_50
					{
						return "SPM_50";
					}
					case 40: // SPM_40
					{
						return "SPM_40";
					}
					case 55: // SPM_55
					{
						return "SPM_55";
					}
					case 45: // SPM_45
					{
						return "SPM_45";
					}
					case 10: // SPM_10
					{
						return "SPM_10";
					}
					case 46: // SPM_46
					{
						return "SPM_46";
					}
					case 15: // SPM_15
					{
						return "SPM_15";
					}
					case 20: // SPM_20
					{
						return "SPM_20";
					}
					case 16: // SPM_16
					{
						return "SPM_16";
					}
					case 25: // SPM_25
					{
						return "SPM_25";
					}
					case 36: // SPM_36
					{
						return "SPM_36";
					}
					case 26: // SPM_26
					{
						return "SPM_26";
					}
					case 90: // SPM_90
					{
						return "SPM_90";
					}
					case 80: // SPM_80
					{
						return "SPM_80";
					}
					case 75: // SPM_75
					{
						return "SPM_75";
					}
					case 85: // SPM_85
					{
						return "SPM_85";
					}
					case 96: // SPM_96
					{
						return "SPM_96";
					}
					case 86: // SPM_86
					{
						return "SPM_86";
					}
					case 59: // SPM_59
					{
						return "SPM_59";
					}
					case 8: // SPM_8
					{
						return "SPM_8";
					}
					case 110: // SPM_110
					{
						return "SPM_110";
					}
					case 67: // SPM_67
					{
						return "SPM_67";
					}
					case 119: // SPM_119
					{
						return "SPM_119";
					}
					case 35: // SPM_35
					{
						return "SPM_35";
					}
					case 79: // SPM_79
					{
						return "SPM_79";
					}
					case 100: // SPM_100
					{
						return "SPM_100";
					}
					case 115: // SPM_115
					{
						return "SPM_115";
					}
					case 91: // SPM_91
					{
						return "SPM_91";
					}
					case 111: // SPM_111
					{
						return "SPM_111";
					}
					case 27: // SPM_27
					{
						return "SPM_27";
					}
					case 103: // SPM_103
					{
						return "SPM_103";
					}
					case 52: // SPM_52
					{
						return "SPM_52";
					}
					case 108: // SPM_108
					{
						return "SPM_108";
					}
					case 60: // SPM_60
					{
						return "SPM_60";
					}
					case 106: // SPM_106
					{
						return "SPM_106";
					}
					case 12: // SPM_12
					{
						return "SPM_12";
					}
					case 32: // SPM_32
					{
						return "SPM_32";
					}
					case 5: // SPM_5
					{
						return "SPM_5";
					}
					case 4: // SPM_4
					{
						return "SPM_4";
					}
					case 7: // SPM_7
					{
						return "SPM_7";
					}
					case 44: // SPM_44
					{
						return "SPM_44";
					}
					case 1: // SPM_1
					{
						return "SPM_1";
					}
					case 0: // SPM_0
					{
						return "SPM_0";
					}
					case 3: // SPM_3
					{
						return "SPM_3";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 8: // CT_MAP_AREA
			{
				switch(fieldIndex)
				{
					case 0: // MAP_AREA_0
					{
						return "MAP_AREA_0";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 9: // CT_GAMEMODES
			{
				switch(fieldIndex)
				{
					case 0: // GAME_0
					{
						return "GAME_0";
					}
					case 4: // GAME_4
					{
						return "GAME_4";
					}
					case 1: // GAME_1
					{
						return "GAME_1";
					}
					case 2: // GAME_2
					{
						return "GAME_2";
					}
					case 3: // GAME_3
					{
						return "GAME_3";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 6: // CT_GANGS
			{
				switch(fieldIndex)
				{
					case 2: // GANG_2
					{
						return "GANG_2";
					}
					case 1: // GANG_1
					{
						return "GANG_1";
					}
					case 0: // Cop
					{
						return "Cop";
					}
					case 3: // GANG_3
					{
						return "GANG_3";
					}
					case 4: // GANG_4
					{
						return "GANG_4";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 4: // CT_DEATHM_LOC
			{
				switch(fieldIndex)
				{
					case 0: // DM_LOC_0
					{
						return "DM_LOC_0";
					}
					case 23: // DM_LOC_23
					{
						return "DM_LOC_23";
					}
					case 22: // DM_LOC_22
					{
						return "DM_LOC_22";
					}
					case 21: // DM_LOC_21
					{
						return "DM_LOC_21";
					}
					case 20: // DM_LOC_20
					{
						return "DM_LOC_20";
					}
					case 27: // DM_LOC_27
					{
						return "DM_LOC_27";
					}
					case 26: // DM_LOC_26
					{
						return "DM_LOC_26";
					}
					case 25: // DM_LOC_25
					{
						return "DM_LOC_25";
					}
					case 24: // DM_LOC_24
					{
						return "DM_LOC_24";
					}
					case 17: // DM_LOC_17
					{
						return "DM_LOC_17";
					}
					case 19: // DM_LOC_19
					{
						return "DM_LOC_19";
					}
					case 18: // DM_LOC_18
					{
						return "DM_LOC_18";
					}
					case 13: // DM_LOC_13
					{
						return "DM_LOC_13";
					}
					case 12: // DM_LOC_12
					{
						return "DM_LOC_12";
					}
					case 11: // DM_LOC_11
					{
						return "DM_LOC_11";
					}
					case 10: // DM_LOC_10
					{
						return "DM_LOC_10";
					}
					case 6: // DM_LOC_6
					{
						return "DM_LOC_6";
					}
					case 16: // DM_LOC_16
					{
						return "DM_LOC_16";
					}
					case 15: // DM_LOC_15
					{
						return "DM_LOC_15";
					}
					case 14: // DM_LOC_14
					{
						return "DM_LOC_14";
					}
					case 9: // DM_LOC_9
					{
						return "DM_LOC_9";
					}
					case 8: // DM_LOC_8
					{
						return "DM_LOC_8";
					}
					case 1: // DM_LOC_1
					{
						return "DM_LOC_1";
					}
					case 7: // DM_LOC_7
					{
						return "DM_LOC_7";
					}
					case 2: // DM_LOC_2
					{
						return "DM_LOC_2";
					}
					case 4: // DM_LOC_4
					{
						return "DM_LOC_4";
					}
					case 28: // DM_LOC_28
					{
						return "DM_LOC_28";
					}
					case 3: // DM_LOC_3
					{
						return "DM_LOC_3";
					}
					case 5: // DM_LOC_5
					{
						return "DM_LOC_5";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 10: // CT_RACES
			{
				switch(fieldIndex)
				{
					case 0: // RACE_0
					{
						return "RACE_0";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 5: // CT_MP_MISSIONS
			{
				switch(fieldIndex)
				{
					case 37: // MPM_37
					{
						return "MPM_37";
					}
					case 76: // MPM_76
					{
						return "MPM_76";
					}
					case 83: // MPM_83
					{
						return "MPM_83";
					}
					case 73: // MPM_73
					{
						return "MPM_73";
					}
					case 63: // MPM_63
					{
						return "MPM_63";
					}
					case 31: // MPM_31
					{
						return "MPM_31";
					}
					case 43: // MPM_43
					{
						return "MPM_43";
					}
					case 17: // MPM_17
					{
						return "MPM_17";
					}
					case 44: // MPM_44
					{
						return "MPM_44";
					}
					case 59: // MPM_59
					{
						return "MPM_59";
					}
					case 49: // MPM_49
					{
						return "MPM_49";
					}
					case 39: // MPM_39
					{
						return "MPM_39";
					}
					case 29: // MPM_29
					{
						return "MPM_29";
					}
					case 19: // MPM_19
					{
						return "MPM_19";
					}
					case 82: // MPM_82
					{
						return "MPM_82";
					}
					case 87: // MPM_87
					{
						return "MPM_87";
					}
					case 94: // MPM_94
					{
						return "MPM_94";
					}
					case 74: // MPM_74
					{
						return "MPM_74";
					}
					case 67: // MPM_67
					{
						return "MPM_67";
					}
					case 10: // MPM_10
					{
						return "MPM_10";
					}
					case 54: // MPM_54
					{
						return "MPM_54";
					}
					case 22: // MPM_22
					{
						return "MPM_22";
					}
					case 66: // MPM_66
					{
						return "MPM_66";
					}
					case 84: // MPM_84
					{
						return "MPM_84";
					}
					case 34: // MPM_34
					{
						return "MPM_34";
					}
					case 78: // MPM_78
					{
						return "MPM_78";
					}
					case 14: // MPM_14
					{
						return "MPM_14";
					}
					case 71: // MPM_71
					{
						return "MPM_71";
					}
					case 64: // MPM_64
					{
						return "MPM_64";
					}
					case 90: // MPM_90
					{
						return "MPM_90";
					}
					case 80: // MPM_80
					{
						return "MPM_80";
					}
					case 70: // MPM_70
					{
						return "MPM_70";
					}
					case 60: // MPM_60
					{
						return "MPM_60";
					}
					case 50: // MPM_50
					{
						return "MPM_50";
					}
					case 40: // MPM_40
					{
						return "MPM_40";
					}
					case 30: // MPM_30
					{
						return "MPM_30";
					}
					case 45: // MPM_45
					{
						return "MPM_45";
					}
					case 56: // MPM_56
					{
						return "MPM_56";
					}
					case 46: // MPM_46
					{
						return "MPM_46";
					}
					case 36: // MPM_36
					{
						return "MPM_36";
					}
					case 26: // MPM_26
					{
						return "MPM_26";
					}
					case 16: // MPM_16
					{
						return "MPM_16";
					}
					case 11: // MPM_11
					{
						return "MPM_11";
					}
					case 55: // MPM_55
					{
						return "MPM_55";
					}
					case 75: // MPM_75
					{
						return "MPM_75";
					}
					case 23: // MPM_23
					{
						return "MPM_23";
					}
					case 24: // MPM_24
					{
						return "MPM_24";
					}
					case 35: // MPM_35
					{
						return "MPM_35";
					}
					case 79: // MPM_79
					{
						return "MPM_79";
					}
					case 15: // MPM_15
					{
						return "MPM_15";
					}
					case 27: // MPM_27
					{
						return "MPM_27";
					}
					case 92: // MPM_92
					{
						return "MPM_92";
					}
					case 72: // MPM_72
					{
						return "MPM_72";
					}
					case 9: // MPM_9
					{
						return "MPM_9";
					}
					case 8: // MPM_8
					{
						return "MPM_8";
					}
					case 7: // MPM_7
					{
						return "MPM_7";
					}
					case 6: // MPM_6
					{
						return "MPM_6";
					}
					case 5: // MPM_5
					{
						return "MPM_5";
					}
					case 4: // MPM_4
					{
						return "MPM_4";
					}
					case 3: // MPM_3
					{
						return "MPM_3";
					}
					case 2: // MPM_2
					{
						return "MPM_2";
					}
					case 1: // MPM_1
					{
						return "MPM_1";
					}
					case 0: // MPM_0
					{
						return "MPM_0";
					}
					case 91: // MPM_91
					{
						return "MPM_91";
					}
					case 81: // MPM_81
					{
						return "MPM_81";
					}
					case 32: // MPM_32
					{
						return "MPM_32";
					}
					case 61: // MPM_61
					{
						return "MPM_61";
					}
					case 51: // MPM_51
					{
						return "MPM_51";
					}
					case 62: // MPM_62
					{
						return "MPM_62";
					}
					case 52: // MPM_52
					{
						return "MPM_52";
					}
					case 42: // MPM_42
					{
						return "MPM_42";
					}
					case 57: // MPM_57
					{
						return "MPM_57";
					}
					case 47: // MPM_47
					{
						return "MPM_47";
					}
					case 58: // MPM_58
					{
						return "MPM_58";
					}
					case 48: // MPM_48
					{
						return "MPM_48";
					}
					case 38: // MPM_38
					{
						return "MPM_38";
					}
					case 28: // MPM_28
					{
						return "MPM_28";
					}
					case 18: // MPM_18
					{
						return "MPM_18";
					}
					case 12: // MPM_12
					{
						return "MPM_12";
					}
					case 68: // MPM_68
					{
						return "MPM_68";
					}
					case 88: // MPM_88
					{
						return "MPM_88";
					}
					case 93: // MPM_93
					{
						return "MPM_93";
					}
					case 41: // MPM_41
					{
						return "MPM_41";
					}
					case 85: // MPM_85
					{
						return "MPM_85";
					}
					case 53: // MPM_53
					{
						return "MPM_53";
					}
					case 21: // MPM_21
					{
						return "MPM_21";
					}
					case 65: // MPM_65
					{
						return "MPM_65";
					}
					case 33: // MPM_33
					{
						return "MPM_33";
					}
					case 77: // MPM_77
					{
						return "MPM_77";
					}
					case 89: // MPM_89
					{
						return "MPM_89";
					}
					case 20: // MPM_20
					{
						return "MPM_20";
					}
					case 13: // MPM_13
					{
						return "MPM_13";
					}
					case 86: // MPM_86
					{
						return "MPM_86";
					}
					case 25: // MPM_25
					{
						return "MPM_25";
					}
					case 69: // MPM_69
					{
						return "MPM_69";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 14: // CT_SPMG
			{
				switch(fieldIndex)
				{
					case 3: // SPMG_3
					{
						return "SPMG_3";
					}
					case 30: // SPMG_30
					{
						return "SPMG_30";
					}
					case 4: // SPMG_4
					{
						return "SPMG_4";
					}
					case 1: // SPMG_1
					{
						return "SPMG_1";
					}
					case 9: // SPMG_9
					{
						return "SPMG_9";
					}
					case 11: // SPMG_11
					{
						return "SPMG_11";
					}
					case 10: // SPMG_10
					{
						return "SPMG_10";
					}
					case 2: // SPMG_2
					{
						return "SPMG_2";
					}
					case 20: // SPMG_20
					{
						return "SPMG_20";
					}
					case 7: // SPMG_7
					{
						return "SPMG_7";
					}
					case 14: // SPMG_14
					{
						return "SPMG_14";
					}
					case 13: // SPMG_13
					{
						return "SPMG_13";
					}
					case 12: // SPMG_12
					{
						return "SPMG_12";
					}
					case 8: // SPMG_8
					{
						return "SPMG_8";
					}
					case 24: // SPMG_24
					{
						return "SPMG_24";
					}
					case 23: // SPMG_23
					{
						return "SPMG_23";
					}
					case 21: // SPMG_21
					{
						return "SPMG_21";
					}
					case 22: // SPMG_22
					{
						return "SPMG_22";
					}
					case 18: // SPMG_18
					{
						return "SPMG_18";
					}
					case 17: // SPMG_17
					{
						return "SPMG_17";
					}
					case 16: // SPMG_16
					{
						return "SPMG_16";
					}
					case 15: // SPMG_15
					{
						return "SPMG_15";
					}
					case 28: // SPMG_28
					{
						return "SPMG_28";
					}
					case 5: // SPMG_5
					{
						return "SPMG_5";
					}
					case 26: // SPMG_26
					{
						return "SPMG_26";
					}
					case 25: // SPMG_25
					{
						return "SPMG_25";
					}
					case 6: // SPMG_6
					{
						return "SPMG_6";
					}
					case 19: // SPMG_19
					{
						return "SPMG_19";
					}
					case 27: // SPMG_27
					{
						return "SPMG_27";
					}
					case 29: // SPMG_29
					{
						return "SPMG_29";
					}
					case 0: // SPMG_0
					{
						return "SPMG_0";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
			case 15: // CT_SPRC
			{
				switch(fieldIndex)
				{
					case 61: // SPRC_61
					{
						return "SPRC_61";
					}
					case 59: // SPRC_59
					{
						return "SPRC_59";
					}
					case 69: // SPRC_69
					{
						return "SPRC_69";
					}
					case 36: // SPRC_36
					{
						return "SPRC_36";
					}
					case 46: // SPRC_46
					{
						return "SPRC_46";
					}
					case 57: // SPRC_57
					{
						return "SPRC_57";
					}
					case 28: // SPRC_28
					{
						return "SPRC_28";
					}
					case 67: // SPRC_67
					{
						return "SPRC_67";
					}
					case 32: // SPRC_32
					{
						return "SPRC_32";
					}
					case 42: // SPRC_42
					{
						return "SPRC_42";
					}
					case 53: // SPRC_53
					{
						return "SPRC_53";
					}
					case 63: // SPRC_63
					{
						return "SPRC_63";
					}
					case 29: // SPRC_29
					{
						return "SPRC_29";
					}
					case 34: // SPRC_34
					{
						return "SPRC_34";
					}
					case 44: // SPRC_44
					{
						return "SPRC_44";
					}
					case 30: // SPRC_30
					{
						return "SPRC_30";
					}
					case 40: // SPRC_40
					{
						return "SPRC_40";
					}
					case 3: // SPRC_3
					{
						return "SPRC_3";
					}
					case 4: // SPRC_4
					{
						return "SPRC_4";
					}
					case 9: // SPRC_9
					{
						return "SPRC_9";
					}
					case 48: // SPRC_48
					{
						return "SPRC_48";
					}
					case 15: // SPRC_15
					{
						return "SPRC_15";
					}
					case 25: // SPRC_25
					{
						return "SPRC_25";
					}
					case 11: // SPRC_11
					{
						return "SPRC_11";
					}
					case 21: // SPRC_21
					{
						return "SPRC_21";
					}
					case 19: // SPRC_19
					{
						return "SPRC_19";
					}
					case 38: // SPRC_38
					{
						return "SPRC_38";
					}
					case 17: // SPRC_17
					{
						return "SPRC_17";
					}
					case 56: // SPRC_56
					{
						return "SPRC_56";
					}
					case 27: // SPRC_27
					{
						return "SPRC_27";
					}
					case 66: // SPRC_66
					{
						return "SPRC_66";
					}
					case 13: // SPRC_13
					{
						return "SPRC_13";
					}
					case 52: // SPRC_52
					{
						return "SPRC_52";
					}
					case 23: // SPRC_23
					{
						return "SPRC_23";
					}
					case 62: // SPRC_62
					{
						return "SPRC_62";
					}
					case 54: // SPRC_54
					{
						return "SPRC_54";
					}
					case 64: // SPRC_64
					{
						return "SPRC_64";
					}
					case 50: // SPRC_50
					{
						return "SPRC_50";
					}
					case 60: // SPRC_60
					{
						return "SPRC_60";
					}
					case 0: // SPRC_0
					{
						return "SPRC_0";
					}
					case 5: // SPRC_5
					{
						return "SPRC_5";
					}
					case 6: // SPRC_6
					{
						return "SPRC_6";
					}
					case 58: // SPRC_58
					{
						return "SPRC_58";
					}
					case 68: // SPRC_68
					{
						return "SPRC_68";
					}
					case 35: // SPRC_35
					{
						return "SPRC_35";
					}
					case 18: // SPRC_18
					{
						return "SPRC_18";
					}
					case 45: // SPRC_45
					{
						return "SPRC_45";
					}
					case 31: // SPRC_31
					{
						return "SPRC_31";
					}
					case 41: // SPRC_41
					{
						return "SPRC_41";
					}
					case 39: // SPRC_39
					{
						return "SPRC_39";
					}
					case 49: // SPRC_49
					{
						return "SPRC_49";
					}
					case 16: // SPRC_16
					{
						return "SPRC_16";
					}
					case 26: // SPRC_26
					{
						return "SPRC_26";
					}
					case 37: // SPRC_37
					{
						return "SPRC_37";
					}
					case 47: // SPRC_47
					{
						return "SPRC_47";
					}
					case 12: // SPRC_12
					{
						return "SPRC_12";
					}
					case 22: // SPRC_22
					{
						return "SPRC_22";
					}
					case 33: // SPRC_33
					{
						return "SPRC_33";
					}
					case 43: // SPRC_43
					{
						return "SPRC_43";
					}
					case 14: // SPRC_14
					{
						return "SPRC_14";
					}
					case 24: // SPRC_24
					{
						return "SPRC_24";
					}
					case 10: // SPRC_10
					{
						return "SPRC_10";
					}
					case 20: // SPRC_20
					{
						return "SPRC_20";
					}
					case 70: // SPRC_70
					{
						return "SPRC_70";
					}
					case 1: // SPRC_1
					{
						return "SPRC_1";
					}
					case 2: // SPRC_2
					{
						return "SPRC_2";
					}
					case 7: // SPRC_7
					{
						return "SPRC_7";
					}
					case 8: // SPRC_8
					{
						return "SPRC_8";
					}
					case 55: // SPRC_55
					{
						return "SPRC_55";
					}
					case 65: // SPRC_65
					{
						return "SPRC_65";
					}
					case 51: // SPRC_51
					{
						return "SPRC_51";
					}
					default: 
					{
						gnetWarning("Field ID at specified index does not exist");
						return "";
					}
				}
				break;
			}
		}
		gnetWarning("Field ID does not exist");
		return "";
	}
    
    static int GetFieldIndexFromFieldId(int presenceid, int fieldId) 
    {
        int fieldIndex = -1;
        switch(presenceid)
        {
            case PRESENCE_PRES_0:
            {
            }
            break;
            case PRESENCE_PRES_1:
            {
                switch(fieldId)
                {
                  case 3: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_2:
            {
                switch(fieldId)
                {
                  case 8: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_3:
            {
                switch(fieldId)
                {
                  case 9: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_4:
            {
                switch(fieldId)
                {
                  case 6: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_5:
            {
                switch(fieldId)
                {
                  case 4: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_6:
            {
                switch(fieldId)
                {
                  case 10: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_7:
            {
                switch(fieldId)
                {
                  case 5: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_8:
            {
                switch(fieldId)
                {
                  case 14: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_9:
            {
                switch(fieldId)
                {
                  case 15: fieldIndex = 0; break;
                  default: break;
                }
            }
            break;
            case PRESENCE_PRES_10:
            {
            }
            break;
        }
        return fieldIndex;
    }
    
};

}; //namespace player_schema

#endif //PRESENCEUTIL_H

